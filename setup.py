import os
import subprocess
import sys

def setup_project():
    print("üöÄ B·∫Øt ƒë·∫ßu c√†i ƒë·∫∑t d·ª± √°n AI Policy Chatbot...")

    # T·∫°o th∆∞ m·ª•c chroma_db
    chroma_dir = "./chroma_db"
    if not os.path.exists(chroma_dir):
        os.makedirs(chroma_dir)
        print(f"‚úÖ ƒê√£ t·∫°o th∆∞ m·ª•c {chroma_dir}")
    else:
        print(f"‚úÖ Th∆∞ m·ª•c {chroma_dir} ƒë√£ t·ªìn t·∫°i")

    # Ki·ªÉm tra file .env
    env_file = ".env"
    if not os.path.exists(env_file):
        with open(env_file, "w") as f:
            f.write("OPENAI_API_KEY=your_api_key_here\n")
        print(f"‚úÖ ƒê√£ t·∫°o file {env_file}. Vui l√≤ng c·∫≠p nh·∫≠t API key c·ªßa b·∫°n.")
    else:
        print(f"‚úÖ File {env_file} ƒë√£ t·ªìn t·∫°i")

    # C√†i ƒë·∫∑t c√°c th∆∞ vi·ªán Python
    print("üì¶ ƒêang c√†i ƒë·∫∑t c√°c th∆∞ vi·ªán Python...")
    try:
        # C√†i ƒë·∫∑t c√°c th∆∞ vi·ªán c∆° b·∫£n t·ª´ requirements.txt
        subprocess.check_call([sys.executable, "-m", "pip", "install", "-r", "requirements.txt"])
        print("‚úÖ ƒê√£ c√†i ƒë·∫∑t c√°c th∆∞ vi·ªán Python")

        # C√†i ƒë·∫∑t th√™m c√°c th∆∞ vi·ªán m·ªõi
        subprocess.check_call([sys.executable, "-m", "pip", "install", 
                               "aiohappyeyeballs==2.4.4", 
                               "aiohttp==3.11.11", 
                               "aiosignal==1.3.2", 
                               "annotated-types==0.7.0", 
                               "anyio==4.8.0", 
                               "asgiref==3.8.1", 
                               "attrs==25.1.0", 
                               "backoff==2.2.1", 
                               "bcrypt==4.2.1", 
                               "blinker==1.9.0", 
                               "chroma-hnswlib==0.7.3", 
                               "chromadb==0.4.22", 
                               "Flask==3.0.2", 
                               "Flask-Cors==4.0.0", 
                               "Flask-SQLAlchemy==3.1.1", 
                               "langchain==0.3.25", 
                               "langchain-community==0.3.23", 
                               "openai==1.77.0", 
                               "pdfplumber==0.10.3", 
                               "python-dotenv==1.0.1", 
                               "tiktoken==0.9.0"])
        print("‚úÖ ƒê√£ c√†i ƒë·∫∑t c√°c th∆∞ vi·ªán m·ªõi")
    except subprocess.CalledProcessError:
        print("‚ùå L·ªói khi c√†i ƒë·∫∑t c√°c th∆∞ vi·ªán Python")
        return False

    # Ki·ªÉm tra file ICT205_ASS.pdf
    pdf_file = "ICT205_ASS.pdf"
    if not os.path.exists(pdf_file):
        print(f"‚ö†Ô∏è File {pdf_file} kh√¥ng t·ªìn t·∫°i. Vui l√≤ng ƒë·∫£m b·∫£o file n√†y t·ªìn t·∫°i trong th∆∞ m·ª•c g·ªëc.")
    else:
        print(f"‚úÖ File {pdf_file} ƒë√£ t·ªìn t·∫°i")

    print("\nüéâ C√†i ƒë·∫∑t ho√†n t·∫•t! B·∫°n c√≥ th·ªÉ ch·∫°y ·ª©ng d·ª•ng b·∫±ng c√°ch:")
    print("1. C·∫≠p nh·∫≠t API key trong file .env")
    print("2. Ch·∫°y backend: python app.py")
    print("3. Ch·∫°y frontend: cd client && npm start")

    return True

if __name__ == "__main__":
    setup_project()
